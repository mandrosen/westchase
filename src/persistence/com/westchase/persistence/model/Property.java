package com.westchase.persistence.model;
// Generated Jun 29, 2009 7:29:18 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;

/**
 * Property generated by hbm2java
 */
@Entity
@Table(name = "property")
public class Property implements java.io.Serializable {

	private Integer id;
	private PropertyType propertyType;
	private FlagSize flagSize;
	private String buildingName;
	private String geoNumber;
	private String geoAddress;
	private String geoCity;
	private String geoState;
	private String geoZipCode;
	private String latitude;
	private String longitude;
	private Integer buildingSize;
	private Integer availableForLease;
	private Integer occupiedSqFt;
	private Double occupancyRate;
	private Double priorQ1OccupiedRate;
	private Double priorQ2OccupiedRate;
	private Double priorQ3OccupiedRate;
	private Double priorQ4OccupiedRate;
	private Integer largestVacancy;
	private Integer noUnits;
	private Integer vacantUnits;
//	private Integer personId;
	private String businessType;
	private Integer commercialSpcFore;
	private String commSpcFore1yr;
	private boolean forSale;
	private boolean singleTenant;
	private boolean willDivide;
	private boolean trpassAfdvt;
	private Date trspassDate;
	private boolean flagPole;
	private String notes;
	private Double acreage;
	private String hcad;
	private String owner;
	private String metaOwner;
	private String center;
	private String yearBuilt;
	private String facet;
	private String frontage;
	private String priceSqFt;
	private String restrictions;
	private Date inputDate;
	private Date lastUpdate;
//	private PhoneBook phoneBook;
	private boolean deleted;
	private Set<PhoneBookRelation> phoneBookRelations = new HashSet<PhoneBookRelation>(0);
	private Set<PropertyHcad> propertyHcads = new HashSet<PropertyHcad>(0);

	public Property() {
	}

    public Property(Integer id) {
		this();
		this.id = id;
	}

	public Property(Integer id, boolean forSale, boolean singleTenant,
			boolean willDivide, boolean trpassAfdvt, boolean flagPole, boolean deleted) {
		this.id = id;
		this.forSale = forSale;
		this.singleTenant = singleTenant;
		this.willDivide = willDivide;
		this.trpassAfdvt = trpassAfdvt;
		this.flagPole = flagPole;
		this.deleted = deleted;
	}
	public Property(Integer id, PropertyType propertyType, String buildingName, String geoNumber,
			String geoAddress, String geoCity, String geoState,
			String geoZipCode, String latitude, String longitude, Integer buildingSize, Integer availableForLease,
			Integer occupiedSqFt, Double occupancyRate,
			Double priorQ1OccupiedRate, Double priorQ2OccupiedRate,
			Double priorQ3OccupiedRate, Double priorQ4OccupiedRate,
			Integer largestVacancy, Integer noUnits, Integer vacantUnits,
			/*Integer personId, */String businessType, Integer commercialSpcFore,
			String commSpcFore1yr, boolean forSale, boolean singleTenant,
			boolean willDivide, boolean trpassAfdvt, Date trspassDate,
			boolean flagPole, String notes, Double acreage, String hcad,
			String owner, String center, String yearBuilt, String facet,
			String frontage, String priceSqFt, String restrictions,
			Date inputDate, Date lastUpdate/*, PhoneBook phoneBook*/,
			boolean deleted,
			Set<PhoneBookRelation> phoneBookRelations) {
		this.id = id;
		this.propertyType = propertyType;
		this.buildingName = buildingName;
		this.geoNumber = geoNumber;
		this.geoAddress = geoAddress;
		this.geoCity = geoCity;
		this.geoState = geoState;
		this.geoZipCode = geoZipCode;
		this.latitude = latitude;
		this.longitude = longitude;
		this.buildingSize = buildingSize;
		this.availableForLease = availableForLease;
		this.occupiedSqFt = occupiedSqFt;
		this.occupancyRate = occupancyRate;
		this.priorQ1OccupiedRate = priorQ1OccupiedRate;
		this.priorQ2OccupiedRate = priorQ2OccupiedRate;
		this.priorQ3OccupiedRate = priorQ3OccupiedRate;
		this.priorQ4OccupiedRate = priorQ4OccupiedRate;
		this.largestVacancy = largestVacancy;
		this.noUnits = noUnits;
		this.vacantUnits = vacantUnits;
//		this.personId = personId;
		this.businessType = businessType;
		this.commercialSpcFore = commercialSpcFore;
		this.commSpcFore1yr = commSpcFore1yr;
		this.forSale = forSale;
		this.singleTenant = singleTenant;
		this.willDivide = willDivide;
		this.trpassAfdvt = trpassAfdvt;
		this.trspassDate = trspassDate;
		this.flagPole = flagPole;
		this.notes = notes;
		this.acreage = acreage;
		this.hcad = hcad;
		this.owner = owner;
		this.center = center;
		this.yearBuilt = yearBuilt;
		this.facet = facet;
		this.frontage = frontage;
		this.priceSqFt = priceSqFt;
		this.restrictions = restrictions;
		this.inputDate = inputDate;
		this.lastUpdate = lastUpdate;
//		this.phoneBook = phoneBook;
		this.deleted = deleted;
		this.phoneBookRelations = phoneBookRelations;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PropertyType")
	public PropertyType getPropertyType() {
		return this.propertyType;
	}

	public void setPropertyType(PropertyType propertyType) {
		this.propertyType = propertyType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "flag_size_id")
	public FlagSize getFlagSize() {
		return this.flagSize;
	}

	public void setFlagSize(FlagSize flagSize) {
		this.flagSize = flagSize;
	}

	@Column(name = "BuildingName", length = 50)
	@Length(max = 50)
	public String getBuildingName() {
		return this.buildingName;
	}

	public void setBuildingName(String buildingName) {
		this.buildingName = buildingName;
	}

	@Column(name = "GeoNumber", length = 50)
	@Length(max = 10)
	public String getGeoNumber() {
		return this.geoNumber;
	}

	public void setGeoNumber(String geoNumber) {
		this.geoNumber = geoNumber;
	}

	@Column(name = "GeoAddress", length = 30)
	@Length(max = 30)
	public String getGeoAddress() {
		return this.geoAddress;
	}

	public void setGeoAddress(String geoAddress) {
		this.geoAddress = geoAddress;
	}

	@Column(name = "GeoCity", length = 25)
	@Length(max = 25)
	public String getGeoCity() {
		return this.geoCity;
	}

	public void setGeoCity(String geoCity) {
		this.geoCity = geoCity;
	}

	@Column(name = "GeoState", length = 6)
	@Length(max = 6)
	public String getGeoState() {
		return this.geoState;
	}

	public void setGeoState(String geoState) {
		this.geoState = geoState;
	}

	@Column(name = "GeoZipCode", length = 10)
	@Length(max = 10)
	public String getGeoZipCode() {
		return this.geoZipCode;
	}

	public void setGeoZipCode(String geoZipCode) {
		this.geoZipCode = geoZipCode;
	}

	@Column(name = "Latitude")
	public String getLatitude() {
		return this.latitude;
	}

	public void setLatitude(String latitude) {
		this.latitude = latitude;
	}

	@Column(name = "Longitude")
	public String getLongitude() {
		return this.longitude;
	}

	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}

	@Column(name = "BuildingSize")
	public Integer getBuildingSize() {
		return this.buildingSize;
	}

	public void setBuildingSize(Integer buildingSize) {
		this.buildingSize = buildingSize;
	}

	@Column(name = "AvailableForLease")
	public Integer getAvailableForLease() {
		return this.availableForLease;
	}

	public void setAvailableForLease(Integer availableForLease) {
		this.availableForLease = availableForLease;
	}

	@Column(name = "OccupiedSqFt")
	public Integer getOccupiedSqFt() {
		return this.occupiedSqFt;
	}

	public void setOccupiedSqFt(Integer occupiedSqFt) {
		this.occupiedSqFt = occupiedSqFt;
	}

	@Column(name = "OccupancyRate", precision = 7)
	public Double getOccupancyRate() {
		return this.occupancyRate;
	}

	public void setOccupancyRate(Double occupancyRate) {
		this.occupancyRate = occupancyRate;
	}

	@Column(name = "Prior_Q1_Occupied_Rate", precision = 7)
	public Double getPriorQ1OccupiedRate() {
		return this.priorQ1OccupiedRate;
	}

	public void setPriorQ1OccupiedRate(Double priorQ1OccupiedRate) {
		this.priorQ1OccupiedRate = priorQ1OccupiedRate;
	}

	@Column(name = "Prior_Q2_Occupied_Rate", precision = 7)
	public Double getPriorQ2OccupiedRate() {
		return this.priorQ2OccupiedRate;
	}

	public void setPriorQ2OccupiedRate(Double priorQ2OccupiedRate) {
		this.priorQ2OccupiedRate = priorQ2OccupiedRate;
	}

	@Column(name = "Prior_Q3_Occupied_Rate", precision = 7)
	public Double getPriorQ3OccupiedRate() {
		return this.priorQ3OccupiedRate;
	}

	public void setPriorQ3OccupiedRate(Double priorQ3OccupiedRate) {
		this.priorQ3OccupiedRate = priorQ3OccupiedRate;
	}

	@Column(name = "Prior_Q4_Occupied_Rate", precision = 7)
	public Double getPriorQ4OccupiedRate() {
		return this.priorQ4OccupiedRate;
	}

	public void setPriorQ4OccupiedRate(Double priorQ4OccupiedRate) {
		this.priorQ4OccupiedRate = priorQ4OccupiedRate;
	}

	@Column(name = "LargestVacancy")
	public Integer getLargestVacancy() {
		return this.largestVacancy;
	}

	public void setLargestVacancy(Integer largestVacancy) {
		this.largestVacancy = largestVacancy;
	}

	@Column(name = "NoUnits")
	public Integer getNoUnits() {
		return this.noUnits;
	}

	public void setNoUnits(Integer noUnits) {
		this.noUnits = noUnits;
	}

	@Column(name = "VacantUnits")
	public Integer getVacantUnits() {
		return this.vacantUnits;
	}

	public void setVacantUnits(Integer vacantUnits) {
		this.vacantUnits = vacantUnits;
	}

//	@Column(name = "PersonId")
//	public Integer getPersonId() {
//		return this.personId;
//	}
//
//	public void setPersonId(Integer personId) {
//		this.personId = personId;
//	}

	@Column(name = "BusinessType", length = 50)
	@Length(max = 50)
	public String getBusinessType() {
		return this.businessType;
	}

	public void setBusinessType(String businessType) {
		this.businessType = businessType;
	}

	@Column(name = "CommercialSpcFore")
	public Integer getCommercialSpcFore() {
		return this.commercialSpcFore;
	}

	public void setCommercialSpcFore(Integer commercialSpcFore) {
		this.commercialSpcFore = commercialSpcFore;
	}

	@Column(name = "CommSpcFore1yr", length = 10)
	@Length(max = 10)
	public String getCommSpcFore1yr() {
		return this.commSpcFore1yr;
	}

	public void setCommSpcFore1yr(String commSpcFore1yr) {
		this.commSpcFore1yr = commSpcFore1yr;
	}

	@Column(name = "ForSale", nullable = false)
	public boolean isForSale() {
		return this.forSale;
	}

	public void setForSale(boolean forSale) {
		this.forSale = forSale;
	}

	@Column(name = "SingleTenant", nullable = false)
	public boolean isSingleTenant() {
		return this.singleTenant;
	}

	public void setSingleTenant(boolean singleTenant) {
		this.singleTenant = singleTenant;
	}

	@Column(name = "WillDivide", nullable = false)
	public boolean isWillDivide() {
		return this.willDivide;
	}

	public void setWillDivide(boolean willDivide) {
		this.willDivide = willDivide;
	}

	@Column(name = "TrpassAfdvt", nullable = false)
	public boolean isTrpassAfdvt() {
		return this.trpassAfdvt;
	}

	public void setTrpassAfdvt(boolean trpassAfdvt) {
		this.trpassAfdvt = trpassAfdvt;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TrspassDate", length = 19)
	public Date getTrspassDate() {
		return this.trspassDate;
	}

	public void setTrspassDate(Date trspassDate) {
		this.trspassDate = trspassDate;
	}

	@Column(name = "FlagPole", nullable = false)
	public boolean isFlagPole() {
		return this.flagPole;
	}

	public void setFlagPole(boolean flagPole) {
		this.flagPole = flagPole;
	}

	@Column(name = "Notes")
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "Acreage", precision = 15, scale = 5)
	public Double getAcreage() {
		return this.acreage;
	}

	public void setAcreage(Double acreage) {
		this.acreage = acreage;
	}

	@Column(name = "HCad", length = 50)
	@Length(max = 50)
	public String getHcad() {
		return this.hcad;
	}

	public void setHcad(String hcad) {
		this.hcad = hcad;
	}

	@Column(name = "Owner", length = 50)
	@Length(max = 50)
	public String getOwner() {
		return this.owner;
	}

	public void setOwner(String owner) {
		this.owner = owner;
	}

	@Column(name = "MetaOwner", length = 50)
	@Length(max = 50)
	public String getMetaOwner() {
		return this.metaOwner;
	}

	public void setMetaOwner(String metaOwner) {
		this.metaOwner = metaOwner;
	}

	@Column(name = "Center", length = 50)
	@Length(max = 50)
	public String getCenter() {
		return this.center;
	}

	public void setCenter(String center) {
		this.center = center;
	}

	@Column(name = "YearBuilt", length = 5)
	@Length(max = 5)
	public String getYearBuilt() {
		return this.yearBuilt;
	}

	public void setYearBuilt(String yearBuilt) {
		this.yearBuilt = yearBuilt;
	}

	@Column(name = "Facet", length = 50)
	@Length(max = 50)
	public String getFacet() {
		return this.facet;
	}

	public void setFacet(String facet) {
		this.facet = facet;
	}

	@Column(name = "Frontage", length = 50)
	@Length(max = 50)
	public String getFrontage() {
		return this.frontage;
	}

	public void setFrontage(String frontage) {
		this.frontage = frontage;
	}

	@Column(name = "PriceSqFt", length = 50)
	@Length(max = 50)
	public String getPriceSqFt() {
		return this.priceSqFt;
	}

	public void setPriceSqFt(String priceSqFt) {
		this.priceSqFt = priceSqFt;
	}

	@Column(name = "Restrictions", length = 50)
	@Length(max = 50)
	public String getRestrictions() {
		return this.restrictions;
	}

	public void setRestrictions(String restrictions) {
		this.restrictions = restrictions;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "InputDate", length = 19)
	public Date getInputDate() {
		return this.inputDate;
	}

	public void setInputDate(Date inputDate) {
		this.inputDate = inputDate;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastUpdate", length = 19)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

//	@ManyToOne(fetch = FetchType.EAGER)
//	@JoinColumn(name = "PersonId", nullable = true)
//	public PhoneBook getPhoneBook() {
//		return phoneBook;
//	}
//
//	public void setPhoneBook(PhoneBook phoneBook) {
//		this.phoneBook = phoneBook;
//	}
	
	@Transient
	public String getSummaryString() {
		return this.buildingName + "[" + this.hcad + "] (" + this.geoAddress + ")";
	}
	public void setSummaryString(String summaryString) {}	

	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}


	@OneToMany(fetch = FetchType.EAGER, mappedBy = "property")
	public Set<PhoneBookRelation> getPhoneBookRelations() {
		return this.phoneBookRelations;
	}

	public void setPhoneBookRelations(Set<PhoneBookRelation> phoneBookRelations) {
		this.phoneBookRelations = phoneBookRelations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "property")
	public Set<PropertyHcad> getPropertyHcads() {
		return this.propertyHcads;
	}

	public void setPropertyHcads(Set<PropertyHcad> propertyHcads) {
		this.propertyHcads = propertyHcads;
	}
}
